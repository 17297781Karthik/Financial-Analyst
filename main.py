import osimport requestsimport jsonfrom crewai import Crew, LLM, Task, Agent, Processfrom crewai_tools import BaseToolfrom dotenv import load_dotenvload_dotenv()googleapi = os.getenv('GEMINI_API_KEY')llm = LLM(    model='gemini/gemini-2.0-flash-exp',    api_key=googleapi)symbol = input("Enter the stock symbol like (HAL,IBM): ").strip().upper()api_key = os.getenv('FIN_DATA_API')# API Request Toolclass APIRequestTool(BaseTool):    name: str = "API tool"    description: str = "Fetches stock data from Alpha Vantage API"    url: str    def _run(self):        response = requests.get(self.url)        return response.json()# Create API request toolsweekly_data_tool = APIRequestTool(url=f'https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol={symbol}&apikey={api_key}')monthly_data_tool = APIRequestTool(url=f'https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol={symbol}&apikey={api_key}')# Define Agentsweekly_agent = Agent(    role="Stock Market Weekly Data Analyst",    goal="Analyze the weekly stock data fetched from the API, extract key insights,and generate a well-structured markdown report summarizing trends, patterns,and potential investment opportunities.",    backstory="You are an experienced financial analyst with expertise in technical analysis.You help traders and investors by breaking down weekly stock performance, identifying key patterns, and providing an insightful overview.",    llm=llm,    tools=[weekly_data_tool])monthly_agent = Agent(    role="Stock Market Monthly Data Analyst",    goal="Review the monthly stock data, identify trends in long-term performance,and provide a structured markdown report highlighting financial stability,growth potential, and risk factors.",    backstory="You are a veteran financial consultant who specializes in analyzing long-term market trends. Your insights help investors understand broader movements and make strategic investment decisions.",    llm=llm,    tools=[monthly_data_tool])summarizer = Agent(    role="Stock Market Insight Generator",    goal="Synthesize insights from both weekly and monthly reports, highlighting key strengths,weaknesses, and potential investment strategies based on market data. Present the findings in a clear and actionable markdown format.",    backstory="You are a top-tier financial strategist who distills complex stock market data into actionable insights. Your expertise helps traders and investors make informed decisions based on both short-term and long-term trends.",    llm=llm)# Define Tasksweekly_task = Task(    description="Analyze weekly stock data and generate a structured report with key insights.",    expected_output="A detailed markdown report summarizing weekly stock performance trends.",    agent=weekly_agent)monthly_task = Task(    description="Analyze monthly stock data and generate a structured report with key insights.",    expected_output="A detailed markdown report summarizing monthly stock performance trends.",    agent=monthly_agent)summary_task = Task(    description="Summarize both weekly and monthly reports to generate an investment insights summary.",    expected_output="A structured markdown report with a comparative analysis and investment recommendations.",    agent=summarizer,    context=[weekly_task, monthly_task])# Create Crewcrew = Crew(    agents=[weekly_agent, monthly_agent, summarizer],    tasks=[weekly_task, monthly_task, summary_task],    process= Process.sequential,    verbose=True)# Run Crewres = crew.kickoff()print(res.raw)from IPython import displaydisplay.Markdown(res.raw)